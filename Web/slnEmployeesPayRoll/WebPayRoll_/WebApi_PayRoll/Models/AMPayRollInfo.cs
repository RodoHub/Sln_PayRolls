// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace WebPayRoll_.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// Api Model PayRollInfo: Holds information related to PayRoll
    /// information detailed
    /// </summary>
    public partial class AMPayRollInfo
    {
        /// <summary>
        /// Initializes a new instance of the AMPayRollInfo class.
        /// </summary>
        public AMPayRollInfo() { }

        /// <summary>
        /// Initializes a new instance of the AMPayRollInfo class.
        /// </summary>
        public AMPayRollInfo(int? payRollInfoID = default(int?), double? baseSalary = default(double?), double? breakfastDeduction = default(double?), double? savingDeduction = default(double?), bool? active = default(bool?), DateTime? creationDate = default(DateTime?), int? employeeID = default(int?), double? breakfastDeductionAmount = default(double?), double? savingDeductionAmount = default(double?), double? totalDeductions = default(double?), double? netSalary = default(double?), Guid? token = default(Guid?))
        {
            PayRollInfoID = payRollInfoID;
            BaseSalary = baseSalary;
            BreakfastDeduction = breakfastDeduction;
            SavingDeduction = savingDeduction;
            Active = active;
            CreationDate = creationDate;
            EmployeeID = employeeID;
            BreakfastDeductionAmount = breakfastDeductionAmount;
            SavingDeductionAmount = savingDeductionAmount;
            TotalDeductions = totalDeductions;
            NetSalary = netSalary;
            Token = token;
        }

        /// <summary>
        /// ID for PayRoll Info
        /// </summary>
        [JsonProperty(PropertyName = "payRollInfoID")]
        public int? PayRollInfoID { get; set; }

        /// <summary>
        /// (Amount) Base Salary for Employee
        /// </summary>
        [JsonProperty(PropertyName = "baseSalary")]
        public double? BaseSalary { get; set; }

        /// <summary>
        /// (Percentage %) BreakFast Deduction
        /// </summary>
        [JsonProperty(PropertyName = "breakfastDeduction")]
        public double? BreakfastDeduction { get; set; }

        /// <summary>
        /// (Percentage %) Saving Deduction
        /// </summary>
        [JsonProperty(PropertyName = "savingDeduction")]
        public double? SavingDeduction { get; set; }

        /// <summary>
        /// Status of PayRoll Info
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public bool? Active { get; set; }

        /// <summary>
        /// Creation Date of PayRoll info
        /// </summary>
        [JsonProperty(PropertyName = "creationDate")]
        public DateTime? CreationDate { get; set; }

        /// <summary>
        /// Employee ID
        /// </summary>
        [JsonProperty(PropertyName = "employeeID")]
        public int? EmployeeID { get; set; }

        /// <summary>
        /// (Amount) BreakFast Deduction
        /// </summary>
        [JsonProperty(PropertyName = "breakfastDeductionAmount")]
        public double? BreakfastDeductionAmount { get; private set; }

        /// <summary>
        /// (Amount) Saving Deduction
        /// </summary>
        [JsonProperty(PropertyName = "savingDeductionAmount")]
        public double? SavingDeductionAmount { get; private set; }

        /// <summary>
        /// (Amount) Total Deductions
        /// </summary>
        [JsonProperty(PropertyName = "totalDeductions")]
        public double? TotalDeductions { get; private set; }

        /// <summary>
        /// (Amount) Net Salary
        /// </summary>
        [JsonProperty(PropertyName = "netSalary")]
        public double? NetSalary { get; private set; }

        /// <summary>
        /// Token authorization
        /// </summary>
        [JsonProperty(PropertyName = "token")]
        public Guid? Token { get; set; }

    }
}
